import{desarmar}from"./desarmar.js";import{convertirBinADec,convertirBinAOctal,convertirBinAHex,convertirOctalADec,convertirHexADec,convertirHexABin,convertirHexAOctal,convertirDecABin,convertirDecAOctal,convertirDecAHex,convertirOctalABin,convertirOctalAHex,calcularComplemento1y2}from"./funciones.js";import{Resultados}from"./resultados.js";import{obtenerIDConv}from"./obtenerID.js";export function convertir(e,n){const o=desarmar(e).entero,t=desarmar(e).decimal;let i,a,l,s,r,c,m="",d=0,v={};switch(n){case"decimal":return i=convertirDecABin(o,t),a=convertirDecAOctal(o,t),l=convertirDecAHex(o,t),s=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA1,r=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA2,m=`\n         <div class="resultados">\n         <h2 class= "subtitle">Conversiones:</h2>\n        <div class="resultado-item">\n            <h3>Decimal</h3>\n            <p>${e}</p>\n        </div>\n        <div class = "resultado-item">\n            <h3>Binario</h3>\n            <p>${i}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Octal</h3>\n            <p>${a}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Hexadecimal</h3>\n            <p>${l}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 1</h3>\n            <p>${s}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 2</h3>\n            <p>${r}</p>\n        </div>\n        <h4>Tanto el complemento a 1 como el complemento a 2 se lo realizamos al número binario y su parte entera. </h4>\n        </div>`,v=new Resultados(e,i,a,l,s,r),d=obtenerIDConv()+1,localStorage.setItem("res"+d,JSON.stringify(v)),m;case"binario":return c=convertirBinADec(o,t),a=convertirBinAOctal(o,t),l=convertirBinAHex(o,t),s=calcularComplemento1y2(o).solucionA1,r=calcularComplemento1y2(o).solucionA2,m=`\n         <div class="resultados">\n         <h2 class= "subtitle">Conversiones</h2>\n        <div class="resultado-item">\n            <h3>Decimal</h3>\n            <p>${c}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Binario</h3>\n            <p>${e}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Octal</h3>\n            <p>${a}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Hexadecimal</h3>\n            <p>${l}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 1</h3>\n            <p>${s}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 2</h3>\n            <p>${r}</p>\n        </div>\n        <h4>Tanto el complemento a 1 como el complemento a 2 se lo realizamos al número binario y su parte entera.</h4>\n        </div>`,v=new Resultados(c,e,a,l,s,r),d=obtenerIDConv()+1,localStorage.setItem("res"+d,JSON.stringify(v)),m;case"octal":return c=convertirOctalADec(o,t),i=convertirOctalABin(o,t),l=convertirOctalAHex(o,t),s=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA1,r=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA2,m=`<div class="resultados">\n        <h2 class= "subtitle">Conversiones</h2>\n        <div class="resultado-item">\n            <h3>Decimal</h3>\n            <p>${c}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Binario</h3>\n            <p>${i}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Octal</h3>\n            <p>${e}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Hexadecimal</h3>\n            <p>${l}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 1</h3>\n            <p>${s}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 2</h3>\n            <p>${r}</p>\n        </div>\n        <h4>Tanto el complemento a 1 como el complemento a 2 se lo realizamos al número binario y su parte entera. </h4>\n        </div>`,v=new Resultados(c,i,e,l,s,r),d=obtenerIDConv()+1,localStorage.setItem("res"+d,JSON.stringify(v)),m;case"hexadecimal":return c=convertirHexADec(o,t),i=convertirHexABin(o,t),a=convertirHexAOctal(o,t),s=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA1,r=calcularComplemento1y2(i.split(/[,.]/)[0]).solucionA2,m=`<div class="resultados">\n         <h2 class= "subtitle">Conversiones</h2>\n        <div class="resultado-item">\n            <h3>Decimal</h3>\n            <p>${c}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Binario</h3>\n            <p>${i}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Octal</h3>\n            <p>${a}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Hexadecimal</h3>\n            <p>${e}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 1</h3>\n            <p>${s}</p>\n        </div>\n        <div class="resultado-item">\n            <h3>Complemento a 2</h3>\n            <p>${r}</p>\n        </div>\n        <h4>Tanto el complemento a 1 como el complemento a 2 se lo realizamos al número binario y su parte entera. </h4>\n        </div>`,v=new Resultados(c,i,a,e,s,r),d=obtenerIDConv()+1,localStorage.setItem("res"+d,JSON.stringify(v)),m;default:alert("Perdón, tipo de sistema no reconocido")}}